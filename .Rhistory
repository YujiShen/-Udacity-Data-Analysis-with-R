s <- as.matrix(table(temp))
# bind into test, each row is a month, each column is one sample table
sample.100 <- cbind(sample.100, s)
}
for(i in 1:12){
temp <- quantile(sample.100[i,], probs=c(0, 0.01, 0.03, 0.05, 0.1))
table <- rbind(table, temp)
}
warnings()
View(table)
set.seed(100)
sample.100 <- NULL
# 100 experiments/samples
for(i in 1:100){
# each sample has 100 birthdays month (repersent 100 persons)
temp <- sample(1:12,100, replace = T)
# get frequency of each month
s <- as.matrix(table(temp))
# bind into test, each row is a month, each column is one sample table
sample.100 <- cbind(sample.100, s)
}
table <- NULL
for(i in 1:12){
temp <- quantile(sample.100[i,], probs=c(0, 0.01, 0.03, 0.05, 0.1))
table <- rbind(table, temp)
}
View(table)
month.abb
row.names(table) <- month.abb
View(table)
quantile.table <- NULL
for(i in 1:12){
temp <- quantile(sample.100[i,], probs=c(0, 0.01, 0.03, 0.05, 0.1))
quantile.table <- rbind(quantile.table, temp)
}
row.names(quantile.table) <- month.abb
View(quantile.table)
set.seed(100)
sample.100 <- NULL
# 100 experiments/samples
for(i in 1:100){
# each sample has 100 birthdays month (repersent 100 persons)
temp <- sample(1:12,128, replace = T)
# get frequency of each month
s <- as.matrix(table(temp))
# bind into test, each row is a month, each column is one sample table
sample.100 <- cbind(sample.100, s)
}
quantile.table <- NULL
for(i in 1:12){
temp <- quantile(sample.100[i,], probs=c(0, 0.01, 0.03, 0.05, 0.1))
quantile.table <- rbind(quantile.table, temp)
}
row.names(quantile.table) <- month.abb
View(quantile.table)
set.seed(100)
sample.100 <- NULL
# 100 experiments/samples
for(i in 1:100){
# each sample has 100 birthdays month (repersent 100 persons)
temp <- sample(1:12,128, replace = T)
# get frequency of each month
s <- as.matrix(table(temp))
# bind into test, each row is a month, each column is one sample table
sample.100 <- cbind(sample.100, s)
}
quantile.table <- NULL
for(i in 1:12){
temp <- quantile(sample.100[i,],
probs=c(0, 0.01, 0.03, 0.05, 0.1, 0.95, 0.97, 0.99, 1))
quantile.table <- rbind(quantile.table, temp)
}
row.names(quantile.table) <- month.abb
View(quantile.table)
min(sample.100[1,])
hist(sample.100[1,])
hist(sample.100[2,])
hist(sample.100[12,])
min(sample.100[12,])
?kabble
?kable
sample.1000 <- NULL
for(i in 1:1000){
temp <- sample(1:12,128, replace = T)
s <- as.matrix(table(temp))
sample.1000 <- cbind(sample.1000, s)
}
quantile.table.1000 <- NULL
for(i in 1:12){
temp <- quantile(sample.1000[i,],
probs=c(0, 0.01, 0.03, 0.05, 0.1, 0.95, 0.97, 0.99, 1))
quantile.table.1000 <- rbind(quantile.table.1000, temp)
}
row.names(quantile.table.1000) <- month.abb
View(quantile.table.1000)
setwd('/Users/Yuji/Library/Mobile Documents/com~apple~CloudDocs/Course/Data Analysis with R')
pf <- read.csv("pseudo_facebook.tsv", sep = '\t')
library(ggplot2)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(x = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt") +
ylim(0, 5000)
ggplot(aes(x=age, y = friendship_inisiated), data = pf) +
geom_point(alpha = 1/10, position = position_jitter(h = 0))
names(pf)
ggplot(aes(x=age, y = friendships_inisiated), data = pf) +
geom_point(alpha = 1/10, position = position_jitter(h = 0))
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/10, position = position_jitter(h = 0))
library(dplyr)
install.packages('dplyr')
library(dplyr)
?n
?group_by
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
?arrange
pf.fc_by_age <- arrange(pf.fc_by_age, age)
?%.%
?"%.%"
pf.fc_by_age <- pf %.%
group_by(age) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_point()
?"%*%"
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
xlim(13, 90) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quntile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quntile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quntile, probs = 0.9,
linetype = 2, color = "blue")
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
xlim(13, 90) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quntile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quntile, probs = 0.9,
linetype = 2, color = "blue")
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
xlim(13, 90) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2, color = "blue")
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
coord_catisian(xlim = c(13, 90), ylim = c(0, 1000) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2, color = "blue")
)
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2, color = "blue")
)
ggplot(aes(x=age, y = friendships_initiated), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2, color = "blue")
ggplot(aes(x=age, y = friend_count), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2, color = "blue")
?cor.test
cor.test(x = age, y = friend_count, data = pf)
cor.test(x = pf$age, y = pf$friend_count)
with(subset(pf, age <= 70), cor.test(age, friend_count))
hist(pf$age)
hist(pf$friend_count)
View(quantile.table)
View(sample.100)
hist(sample.100[1,])
hist(sample.1000[1,])
View(sample.100)
View(quantile.table)
View(quantile.table.1000)
names(pf)
ggplot(aes(x = likes_received, y = www_likes_received), data = pf) +
geom_point()
ggplot(aes(x = likes_received, y = www_likes_received), data = pf) +
geom_point() +
coord_cartesian(xlim = c(0,10000), ylim = c(0, 50000))
ggplot(aes(x = likes_received, y = www_likes_received), data = pf) +
geom_point() +
coord_cartesian(xlim = c(0,100000), ylim = c(0, 5000))
ggplot(aes(x = likes_received, y = www_likes_received), data = pf) +
geom_point() +
coord_cartesian(xlim = c(0,25000), ylim = c(0, 10000))
ggplot(aes(x = likes_received, y = www_likes_received), data = pf) +
geom_point(alpha = 1/20) +
coord_cartesian(xlim = c(0,25000), ylim = c(0, 10000))
ggplot(aes(x = likes_received, y = www_likes_received), data = pf) +
geom_point(alpha = 1/10) +
coord_cartesian(xlim = c(0,25000), ylim = c(0, 10000))
ggplot(aes(y = likes_received, x = www_likes_received), data = pf) +
geom_point(alpha = 1/10) +
coord_cartesian(xlim = c(0,25000), ylim = c(0, 10000))
ggplot(aes(y = likes_received, x = www_likes_received), data = pf) +
geom_point(alpha = 1/10) +
coord_cartesian(ylim = c(0,25000), xlim = c(0, 10000))
ggplot(aes(y = likes_received, x = www_likes_received), data = pf) +
geom_point(alpha = 1/10) +
coord_cartesian(ylim = c(0,quantile(pf$likes_received, 0.95)),
xlim = c(0, quantile(pf$www_likes_received, 0.95)))
ggplot(aes(y = likes_received, x = www_likes_received), data = pf) +
geom_point(alpha = 1/10) +
coord_cartesian(ylim = c(0,quantile(pf$likes_received, 0.95)),
xlim = c(0, quantile(pf$www_likes_received, 0.95))) +
geom_smooth(method = "lm", color = "red")
quantile(pf$likes_received, 0.05)
quantile(pf$likes_received, 0.5)
quantile(pf$www_likes_received, 0.5)
quantile(pf$www_likes_received, 0.05)
install.packages('alr3')
library(alr3)
data(Mitchell)
names(Mitchell)
ggplot(aes(x = Temp, y = Month), data = Mitchell) +
geom_point()
hist(Mitchell$Month)
hist(Mitchell$Temp)
ggplot(aes(y = Temp, x = Month), data = Mitchell) +
geom_point()
with(Mitchell, cor.test(Month, Temp))
summary(Mitchell)
ggplot(aes(y = Temp, x = Month), data = Mitchell) +
geom_point() +
coord_trans(x = x%12)
?coord_trans
ggplot(aes(y = Temp, x = Month), data = Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
ggplot(aes(x=(Month%%12),y=Temp),data=Mitchell)+
geom_point()
ggplot(aes(x=(Month%12),y=Temp),data=Mitchell)+
geom_point()
names(pf)
age_with_months <- pf$age + pf$dob_month/12
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
pf$age_with_months <- pf$age + (12-pf$dob_month)/12
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
View(pf.fc_by_age_months)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
View(pf.fc_by_age_months)
group_age_months <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(pf, group_age_months,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months <- arrange(pf.fc_by_age_months, age_with_months)
?arrange
View(pf.fc_by_age_months)
group_age_months <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(pf, group_age_months,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
group_age_months <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(pf, by = group_age_months,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
?summarise
group_age_months <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(group_age_months,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months <- arrange(pf.fc_by_age_months, age_with_months)
View(pf.fc_by_age_months)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = subset(pf.fc_by_age, age_with_months < 71)) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = subset(pf.fc_by_age, age < 71)) +
geom_line()
ggplot(aes(x = round(age / 5) * 5, y = friend_count),
data = subset(pf, age < 71)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line() +
geom_smooth()
p1 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line() +
geom_smooth()
p2 <- ggplot(aes(x = age, y = friend_count_mean), data = subset(pf.fc_by_age, age < 71)) +
geom_line() +
geom_smooth()
p3 <- ggplot(aes(x = round(age / 5) * 5, y = friend_count),
data = subset(pf, age < 71)) +
geom_line(stat = "summary", fun.y = "mean")
library(gridExtra)
grid.arrage(p1,p2,p3, ncol=1)
grid.arrange(p1,p2,p3, ncol=1)
data(diamond)
data(diamonds)
ggplot(aes(x = price, y = x), data = damonds) +
geom_point()
ggplot(aes(x = price, y = x), data = diamonds) +
geom_point()
ggplot(aes(x = x, y = price), data = diamonds) +
geom_point()
summary(diamonds$x)
with(diamonds, cor.test(price, x))
with(diamonds, cor.test(price, y))
with(diamonds, cor.test(price, z))
ggplot(aes(x = depth, y = price), data = diamonds) +
geom_point()
summary(dimaonds$depth)
summary(diamonds$depth)
ggplot(aes(x = depth, y = price), data = diamonds) +
geom_point(alpha = 1/100) +
scale_x_countinuous(breaks = seq(43, 79, 2))
ggplot(aes(x = depth, y = price), data = diamonds) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(43, 79, 2))
with(diamonds, cor.test(price, depth))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
coord_cartesian(xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99)))
ggplot(aes(x = x*y*z, y = price), data = diamonds) +
geom_point()
library(plyr)
count(diamonds$volume == 0)
detach("package:plyr", unload=TRUE)
count(diamonds$volume == 0)
detach("package:dplyr", unload=TRUE)
count(diamonds$volume == 0)
library(plyr)
count(diamonds$volume == 0)
detach("package:plyr", unload=TRUE)
library(plyr); library(dplyr)
count(diamonds$volume == 0)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
count(diamonds$x == 0)
count(diamonds$volume == 0)
detach("package:dplyr", unload=TRUE)
count(diamonds$volume == 0)
subset(diamonds, volume > 0 & volume <= 800)
with(subset(diamonds, volume > 0 & volume <= 800),
cor.test(volume, price))
ggplot(aes(x = volume, y = price), subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/20) +
geom_smooth()
ggplot(aes(x = volume, y = price), subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/20)
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/20) +
geom_smooth()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/20) +
stat_smooth()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth(method = "lm")
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth(method = "lm", formula = y ~ poly(x, 3), size = 1)
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth(method = "lm", formula = y ~ poly(x, 3))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth(method = "lm", formula = y ~ I(x^3))
?I
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth(method = "lm", formula = y ~ x^3)
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume <= 800)) +
geom_point(alpha = 1/10) +
stat_smooth(method = "lm", formula = y ~ I(x^3))
library(dplyr)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
names(diamonds)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
detach("package:dplyr", unload=TRUE)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
library(dplyr)
detach("package:plyr", unload=TRUE)
library(dplyr)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
names(diamonds)
diamondsByClarity <- summarise(group_by(diamonds, clarity),
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity
group_by(diamonds, clarity)
